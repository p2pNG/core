name: Test and Coverage
on:
  push:
    branches: [ master ]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened ]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15

      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Run go test
        run: go test -v ./...

      - name: Run go test and generate coverage data
        if: matrix.os == 'ubuntu-latest'
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
          fail_ci_if_error: true
